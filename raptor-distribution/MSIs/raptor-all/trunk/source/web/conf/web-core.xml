<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean id="webEngine" class="uk.ac.cardiff.raptorweb.engine.RaptorWebEngine" init-method="initialise">
		<property name="registry"><ref bean="muaRegistry"></ref></property>
		<property name="reportHandler"><ref bean="reportHandler"></ref></property>
		<property name="webMetadata"><ref bean="webMetadata"></ref></property>
        <constructor-arg index="0"><ref bean="serviceEndpointClient"/></constructor-arg>
	</bean>

    <!-- View Validators -->
    <bean id="savedGraphWizardModelValidator" class="uk.ac.cardiff.raptorweb.validators.SavedGraphWizardModelValidator"/>


	<bean id="setupService" class="uk.ac.cardiff.raptorweb.service.impl.SetupServiceImpl">
		<property name="webEngine"><ref bean="webEngine"/></property>
	</bean>

	<bean id="preferenceService" class="uk.ac.cardiff.raptorweb.service.impl.PreferenceServiceImpl">

	</bean>
    
    <bean id="juspService" class="uk.ac.cardiff.raptorweb.service.impl.JuspServiceImpl">
        
    </bean>
    
    <bean id="savedWizardReportsService" class="uk.ac.cardiff.raptorweb.service.impl.SavedWizardReportsServiceImpl">
        <property name="marshaller" ref="castorMarshaller" />
        <property name="unmarshaller" ref="castorMarshaller" />
        <property name="baseDirectory">
            <value>/</value>
        </property>
        <property name="saveDirectory">
            <value>/reports/</value>
        </property>
    </bean>
    
    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller">
        <property name="mappingLocation" value="classpath:graph-wizard-mapping.xml" />
        <property name="whitespacePreserve" value="true"/>
    </bean>
    
    <bean id="
        graphWizardService " class="uk.ac.cardiff.raptorweb.service.impl.GraphWizardServiceImpl">
        <property name="webEngine">
            <ref bean="webEngine" />
        </property>
        <property name="chartProcessor">
            <ref bean="chartProcessor" />
        </property>
    </bean>
    
    <bean id="eventTypeService" class="uk.ac.cardiff.raptorweb.service.impl.EventTypeServiceImpl">
        <property name="webEngine"><ref bean="webEngine"/></property>
        <property name="eventTypeToDisplayMapper" ref="eventTypesToDisplayMapper"/>
    </bean>

	<bean id="startService" class="uk.ac.cardiff.raptorweb.service.impl.StartServiceImpl">
		<property name="webEngine"><ref bean="webEngine"/></property>
        <property name="dashboardStatisticSets" ref="dashboardStatisticsList"/>        
	</bean>

	<bean id="graphService" class="uk.ac.cardiff.raptorweb.service.impl.GraphServiceImpl">
		<property name="webEngine"><ref bean="webEngine"/></property>
		<property name="chartProcessor"><ref bean="chartProcessor"/></property>
	</bean>

	<!--  SET UP the report generators -->
	<bean name="reportHandler" class="uk.ac.cardiff.raptorweb.engine.reports.ReportHandler">
		<property name ="reportConstructors">
			<list>
				<bean name="excelreportConstructorImpl" class="uk.ac.cardiff.raptorweb.engine.reports.ExcelReportGenerator">
					<property name="saveDirectory"><value>/downloads/</value></property>
					<property name="baseDirectory"><value>/</value></property> <!-- the above is the absolute path, this is the same but as a relative path-->
				</bean>
				<bean name="csvreportConstructorImpl" class="uk.ac.cardiff.raptorweb.engine.reports.CSVReportGenerator">
					<property name="saveDirectory"><value>/downloads/</value></property>
					<property name="baseDirectory"><value>/</value></property> <!-- the above is the absolute path, this is the same but as a relative path-->
				</bean>
				<bean name="pdfreportConstructorImpl" class="uk.ac.cardiff.raptorweb.engine.reports.GraphAndChartPDFReportGenerator">
					<property name="saveDirectory"><value>/downloads/</value></property>
					<property name="baseDirectory"><value>/</value></property> <!-- the above is the absolute path, this is the same but as a relative path-->
					<property name="reportBean"><ref bean="genericReportBean"/></property>
					<property name="reportXMLFile"><value>generic-report.xml</value></property>
                    <property name="eventTypeMapper"><ref bean="eventTypesToDisplayMapper"/></property>
				</bean>
			</list>
		</property>
	</bean>

	<bean name="genericReportBean" class="uk.ac.cardiff.raptorweb.engine.reports.beans.GenericReportBean"/>

    <!-- Set up the chart processor -->
    <bean name="chartProcessor" class="uk.ac.cardiff.raptorweb.engine.ChartProcessor">
            <property name="saveDirectory"><value>/graphs/</value></property>
            <property name="baseDirectory"><value>/</value></property> <!-- the above is the absolute path, this is the same but as a relative path-->
    </bean>
    
     <!-- Set up a background task that removes old graphs used for display only (not saved reports e.g. PDFs) -->
    <bean id="garbageCollectionService" class="uk.ac.cardiff.raptorweb.service.impl.GarbageCollectionServiceImpl">
        <property name="graphDirectoryCleaner" ref="graphCleaner"/>
    </bean>
    
    <bean id="graphCleaner" class="uk.ac.cardiff.raptorweb.engine.garbage.GraphDirectoryCleaner">
        <property name="graphsDirectoryToClean" value="/graphs/"/>
        <property name="daysBehindToRemoveFrom" value="7"/>
    </bean>
    
    <bean id="garbageCollectionScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
               <ref local="cleanOldGraphsQuickTrigger"/>
            </list>
        </property>
    </bean>

    <bean id="cleanOldGraphsQuickTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail">
            <ref local="cleanOldGraphsJobDetail" />
        </property>
        <property name="startDelay" value="10000"/>
        <property name="repeatInterval" value="18000000"/>
    </bean>

    <bean id="cleanOldGraphsJobDetail"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="garbageCollectionService" />
        </property>
        <property name="targetMethod">
            <value>cleanOldGraphsDirectory</value>
        </property>
        <property name="concurrent">
            <value>false</value>
        </property>
    </bean>


	<!-- Set up the start page background stats generator -->
	<bean id="statsSchedular" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
			   <ref local="SystemStatsQuickTrigger"/>
			</list>
		</property>
	</bean>

	<bean id="SystemStatsQuickTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail">
			<ref local="SystemStatsJobDetail" />
		</property>
		<property name="startDelay" value="5000"/>
		<property name="repeatInterval" value="3600000"/>
	</bean>

	<bean id="SystemStatsJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="startService" />
		</property>
		<property name="targetMethod">
			<value>generateStatisticsBackground</value>
		</property>
		<property name="concurrent">
			<value>false</value>
		</property>
	</bean>
    
    <!--  handles mapping between event types (Class names) and friendly names to display -->
    <bean id="eventTypesToDisplayMapper" class="uk.ac.cardiff.raptorweb.model.EventTypeDisplayMapper">
        <property name="eventTypeFriendlyNameMap">
            <map>
                <entry value="OpenAthens LA IdP" key="uk.ac.cardiff.model.event.OpenathenslaAuthenticationEvent" />
                <entry value="Shibboleth IdP" key="uk.ac.cardiff.model.event.ShibbolethIdpAuthenticationEvent"/>
                <entry value="EZproxy" key="uk.ac.cardiff.model.event.EzproxyAuthenticationEvent"/>
                <entry value="Shibboleth SP" key="uk.ac.cardiff.model.event.ShibbolethSpAuthenticationEvent"/>
                <entry value="Moonshot IdP" key="uk.ac.cardiff.model.event.MoonshotRadiusAuthenticationEvent" />
                <entry value="Eduroam IdP" key="uk.ac.cardiff.model.event.EduroamRadiusAuthenticationEvent" />
            </map>
        </property>
    
    </bean>

    <import resource="metadata.xml" />
    <import resource="mua-endpoints.xml" />

</beans>
