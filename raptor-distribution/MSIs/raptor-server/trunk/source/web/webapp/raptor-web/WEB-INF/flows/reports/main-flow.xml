<!--

    Copyright (C) 2010 Cardiff University, Wales <smartp@cf.ac.uk>

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<flow parent="globalflow" xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">


	<var name="common" class="uk.ac.cardiff.raptorweb.model.CommonModel" />


	<on-start>
	   <!-- websession holds all variables for a particualar user, for a particular instance-->
		<!-- load the user preferences -->
		<evaluate expression="preferenceService.loadUserPrefs()" result="flowScope.websession" />
		<!-- load saved reports for that user, although could be added to the preferences service -->
		<evaluate expression="graphService.loadSavedReports(flowScope.websession)"/>

	</on-start>
    


	<view-state id="startReport" view="dashboard.xhtml">

		<on-entry>
			<evaluate expression="startService.generateStatistics(flowScope.websession)" />
		</on-entry>

		<transition on="refreshStartStats">
			<evaluate expression="startService.generateStatistics(flowScope.websession)" />
		</transition>


	</view-state>

	<view-state id="about" view="about.xhtml">

	</view-state>

	<view-state id="graphicalReports" view="graphicalReports.xhtml">
    
        <var name="processorToAdd" class="uk.ac.cardiff.model.wsmodel.ProcessorInformation"/>

		<!-- populate the statisticalunit list -->
		<on-entry>
            <evaluate expression="graphService.populateStatisticalUnits(flowScope.websession)" />
            <evaluate expression="graphService.populateSuggestionValues(flowScope.websession)"/>
        </on-entry>

		<transition on="invokeStatisticalUnit">
			<evaluate expression="graphService.invokeStatisticalUnit(flowScope.websession)" />
		</transition>

		<transition on="updateMUAStatistic">
			<evaluate expression="graphService.updateAndInvokeStatisticalUnit(flowScope.websession)" />			
		</transition>

		<transition on="removeReport">
			<evaluate expression="graphService.removeReport(flowScope.websession)" />
		</transition>

		<transition on="generateExcelReport">
			<evaluate expression="graphService.generateExcelReport(flowScope.websession)" />
		</transition>

		<transition on="generateCSVReport">
			<evaluate expression="graphService.generateCSVReport(flowScope.websession)" />
		</transition>
		
		<transition on="generatePDFReport">
			<evaluate expression="graphService.generatePDFReport(flowScope.websession)"/>
		</transition>
        
        <transition on="initialiseNewProcessorAdd">
            <evaluate expression="flowScope.websession.graphmodel.initialiseNewProcessorAdd()"/>
        </transition>
        
        <transition on="setupProcessorToAdd">
            <evaluate expression="flowScope.websession.graphmodel.setupProcessorToAdd()"/>
        </transition>
        

		<transition on="removeSeriesFromSelectedStatistic">
		      <evaluate expression="graphService.removeSeriesFromSelectedStatistic(flowScope.websession)"/>
		</transition>
		
		<transition on="removeSelectedFilterFromSelectedStatistic">
		      <evaluate expression="graphService.removeSelectedFilterFromSelectedStatistic(flowScope.websession)"/>
		</transition>

		<transition on="addSeriesToSelectedStatistic">
		  <evaluate expression="graphService.addSeriesToSelectedStatistic(flowScope.websession)"></evaluate>
		</transition>
        
        <transition on="addProcessorToSelectedStatistic">
            <evaluate expression="graphService.addProcessorToSelectedStatistic(flowScope.websession)"></evaluate>
        </transition>
        
        <transition on="removePostProcessorFromSelectedStatistic">
            <evaluate expression="graphService.removePostProcessorFromSelectedStatistic(flowScope.websession)"></evaluate>
        </transition>
		
		<transition on="addFilterToSelectedSeries">
			<evaluate expression="graphService.addFilterToSelectedSeries(flowScope.websession)"></evaluate>
		</transition>
		
		<transition on="rerenderGraph">
			<evaluate expression="graphService.rerenderGraph(flowScope.websession)"/>
		</transition>


	</view-state>



	<view-state id="setupRaptorWeb" view="setupRaptorWeb.xhtml">
   
        <on-entry>
            <!-- get capabilities every time the web page is rendered, hence resource classification is up to date -->
            <evaluate expression="setupService.getCapabilitiesOfCurrentlyAttachedEndpoint(flowScope.websession)" />
        </on-entry>
        
      

        <!-- force update of capabilities -->
		<transition on="getAggregatorCapabilities">
			<evaluate expression="setupService.getCapabilities(flowScope.websession)" />
		</transition>

		<transition on="deleteAllEntriesFromAttachedMUA">
			<evaluate expression="setupService.deleteAllEntriesFromAttachedMUA(flowScope.websession)" />
		</transition>

		<transition on="attachMUA">
			<evaluate expression="setupService.setAttachedEndpoint(flowScope.websession)" />
		</transition>
        
        <transition on="batchUpload">
            <evaluate expression="setupService.batchUpload(flowScope.websession)" />
        </transition>

        <transition on="sendResourceClassification">
            <evaluate expression="setupService.sendResourceClassification(flowScope.websession)" />
        </transition>

	</view-state>


</flow>
