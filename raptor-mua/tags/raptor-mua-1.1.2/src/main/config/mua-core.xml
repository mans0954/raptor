<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) 2010 Cardiff University, Wales <smartp@cf.ac.uk> Licensed under the Apache License, Version 2.0 (the "License"); 
    you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS 
    IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language 
    governing permissions and limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />


    <!-- WEB SERVICE ENDPOINT INTERFACE (SEI) SETUP -->
    <jaxws:endpoint id="muaEndpoint" implementor="#muaEndpointInterface" address="/MultiUnitAggregator">
        <jaxws:serviceFactory>
            <ref bean='jaxws-and-aegis-service-factory' />
        </jaxws:serviceFactory>


    </jaxws:endpoint>

    <bean id="muaEndpointInterface" class="uk.ac.cardiff.raptormua.wsinterface.impl.MultiUnitAggregatorImpl">
        <property name="processService">
            <ref bean="MUAProcess"></ref>
        </property>
    </bean>
    
    <!-- Types of events supported in this system, removing need for reflection (as this becomes to difficult to manage) -->
    <bean id="registeredConcreteEventTypes" class="uk.ac.cardiff.raptor.registry.EventTypeRegistry">
        <property name="registeredEventTypes">
            <list>
                <bean class="uk.ac.cardiff.raptor.registry.RegisteredEventType">
                    <property name="eventType"> <value type="java.lang.Class">uk.ac.cardiff.model.event.ShibbolethIdpAuthenticationEvent</value></property>
                    <property name="concrete" value="true"/>
                </bean>
                <bean class="uk.ac.cardiff.raptor.registry.RegisteredEventType">
                    <property name="eventType"> <value type="java.lang.Class" >uk.ac.cardiff.model.event.ShibbolethSpAuthenticationEvent</value></property>
                    <property name="concrete" value="true"/>
                </bean>
                <bean class="uk.ac.cardiff.raptor.registry.RegisteredEventType">
                    <property name="eventType"> <value type="java.lang.Class">uk.ac.cardiff.model.event.EzproxyAuthenticationEvent</value></property>                    
                    <property name="concrete" value="true"/>
                </bean>
                 <bean class="uk.ac.cardiff.raptor.registry.RegisteredEventType">
                    <property name="eventType"> <value type="java.lang.Class">uk.ac.cardiff.model.event.RadiusAuthenticationEvent</value></property>                    
                    <property name="concrete" value="true"/>
                </bean>
                <bean class="uk.ac.cardiff.raptor.registry.RegisteredEventType">
                    <property name="eventType"> <value type="java.lang.Class">uk.ac.cardiff.model.event.AuthenticationEvent</value></property>                    
                    <property name="concrete" value="false"/>
                </bean>
                <bean class="uk.ac.cardiff.raptor.registry.RegisteredEventType">
                    <property name="eventType"> <value type="java.lang.Class">uk.ac.cardiff.model.event.Event</value></property>                    
                    <property name="concrete" value="false"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="aegisBean" class="org.apache.cxf.aegis.databinding.AegisDatabinding" scope="prototype" />
    <bean id="jaxws-and-aegis-service-factory" class="org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean" scope="prototype">
        <property name="dataBinding" ref="aegisBean" />
        <property name="properties">
            <map>
                <entry key="writeXsiType">
                    <value type="java.lang.Boolean">true</value>
                </entry>
                <entry key="overrideTypesList">
                    <list>
                        <!-- THIS LIST IS IMPORTANT, it exposes these classes to the aegis XSD creator so we can output the 
                            generic Entry class in lists in the Collector Service Endpoint Class but actually output any of its subclasses. Hence, this 
                            is a way of dealing with inheritence in CXF and aegis -->
                        <value>uk.ac.cardiff.model.event.AuthenticationEvent</value>
                        <value>uk.ac.cardiff.model.event.ShibbolethIdpAuthenticationEvent</value>
                        <value>uk.ac.cardiff.model.event.ShibbolethSpAuthenticationEvent</value>
                        <value>uk.ac.cardiff.model.event.EzproxyAuthenticationEvent</value>
                        <value>uk.ac.cardiff.model.event.OpenathenslaAuthenticationEvent</value>
                        <value>uk.ac.cardiff.model.event.RadiusAuthenticationEvent</value>
                    </list>
                </entry>
            </map>
        </property>
    </bean>

    <!-- DONE -->

    <bean id="MUAProcess" class="uk.ac.cardiff.raptormua.service.impl.MUAProcessImpl">
        <property name="engine">
            <ref bean="MUAEngine"></ref>
        </property>
        <property name="fileUploadEngine">
            <ref bean="fileUploadFromDirectory" />
        </property>
    </bean>

    <bean id="fileUploadFromDirectory" class="uk.ac.cardiff.raptormua.upload.FileUploadEngine">
        <property name="enabled" value="true" />
        <property name="uploadDirectories">
            <list>
                <bean id="shibUploadDirectory" class="uk.ac.cardiff.raptormua.upload.UploadDirectory">
                    <property name="allowedFileExtensions">
                        <list>
                            <value>txt</value>
                            <value>log</value>
                        </list>
                    </property>
                    <property name="uploadDirectory" value="/Users/philsmart/Documents/DataSets/Logs/batch/shib2/" />
                    <property name="eventType">
                        <value>SHIBBOLETH2</value>
                    </property>
                </bean>
                <bean id="shib13UploadDirectory" class="uk.ac.cardiff.raptormua.upload.UploadDirectory">
                    <property name="allowedFileExtensions">
                        <list>
                            <value>txt</value>
                            <value>log</value>
                        </list>
                    </property>
                    <property name="uploadDirectory" value="/Users/philsmart/Documents/DataSets/Logs/batch/shib13/" />
                    <property name="eventType">
                        <value>SHIBBOLETH13</value>
                    </property>
                </bean>
                 <bean id="shibSp24BelowUploadDirectory" class="uk.ac.cardiff.raptormua.upload.UploadDirectory">
                    <property name="allowedFileExtensions">
                        <list>
                            <value>txt</value>
                            <value>log</value>
                        </list>
                    </property>
                    <property name="uploadDirectory" value="/Users/philsmart/Documents/DataSets/Logs/batch/shibsp_upto24/" />
                    <property name="eventType">
                        <value>SHIBBOLETHSP24</value>
                    </property>
                </bean>
                <bean id="ezproxyUploadDirectory" class="uk.ac.cardiff.raptormua.upload.UploadDirectory">
                    <property name="allowedFileExtensions">
                        <list>
                            <value>txt</value>
                            <value>log</value>
                        </list>
                    </property>
                    <property name="uploadDirectory" value="/Users/philsmart/Documents/DataSets/Logs/batch/ezproxy/" />
                    <property name="eventType">
                        <value>EZPROXY</value>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!-- this bean config kicks of the singleton engine instance which is then used by all services of the MUA -->
    <bean id="MUAEngine" class="uk.ac.cardiff.raptormua.engine.MUAEngine">
        <property name="eventReleaseClient">
            <ref bean="eventReleaseClient"/>
        </property>
        <property name="eventTypeRegistry">
            <ref bean="registeredConcreteEventTypes"/>
        </property>
        <property name="statisticsHandler">
            <ref bean="statisticalUnits" />
        </property>
        <property name="storageEngine">
            <ref bean="storageEngine"/>
        </property>
        <property name="resourceStorageEngine">
            <ref bean="resourceStorageEngine"/>
        </property>
        <property name="muaMetadata">
            <ref bean="MUAMetadata"/>
        </property>
        <property name="capabilitiesConstructor">
            <ref bean="capabilitiesConstructor" />
        </property>
        <property name="dataAccessRegister">
            <ref bean="dataAccessRegister"/>
        </property>
        <property name="maxReleaseEventSize">
            <value>5000</value>
        </property> <!-- Max Size is 10000 -->
    </bean>

    <bean id="capabilitiesConstructor" class="uk.ac.cardiff.raptormua.engine.CapabilitiesConstructor">
        <property name="statisticsHandler">
            <ref bean="statisticalUnits" />
        </property>
        <property name="storageEngine">
            <ref bean="storageEngine"></ref>
        </property>
        <property name="metadata">
            <ref bean="MUAMetadata"></ref>
        </property>
        <property name="cacheTimeoutMs">
            <value>1800000</value>
        </property>
        <property name="excludeFieldNames">
            <set>
                <value>principalName</value>
                <value>responseId</value>
                <value>requestId</value>
                <value>sessionId</value>
                <value>requesterIp</value>
                <value>nameIdentifier</value>
                <value>persistantId</value>
                <value>eventTime</value>
                <value>eventId</value>
                <value>assertionId</value>
            </set>
        </property>
    </bean>

    <bean id="statisticalUnits" class="uk.ac.cardiff.raptormua.engine.statistics.StatisticsHandler">
        <property name="statisticRegistry">
            <ref bean="statisticRegistry" />
        </property>

    </bean>

    <!-- Handles all statistical units defined -->
    <bean id="statisticRegistry" class="uk.ac.cardiff.raptormua.engine.statistics.ContextAwareStatisticRegistry">
        <property name="automaticallyFindStatsiticsToLoad" value="true" />
        <property name="processorRegistry">
            <ref bean="processorRegistry" />
        </property>
    </bean>



    <bean id="eventReleaseEngine" class="uk.ac.cardiff.raptor.remoting.client.EventReleaseEngine">
        <property name="attributeFilterEngine">
            <ref bean="attributeFilterEngine" />
        </property>
        <property name="serviceEndpointInterface">
            <ref bean="serviceEndpointInterface" />
        </property>
    </bean>

    <bean id="attributeFilterEngine" class="uk.ac.cardiff.raptor.attribute.filtering.AttrributeFilterEngine" />


    <!-- release trigger setup -->
    <bean id="muaReleaseQuickTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail">
            <ref local="muaReleaseJobDetail" />
        </property>
        <property name="startDelay" value="10000" />
        <property name="repeatInterval" value="10000" />
    </bean>

    <bean id="muaReleaseJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="MUAProcess" />
        </property>
        <property name="targetMethod">
            <value>release</value>
        </property>
        <property name="concurrent">
            <value>false</value>
        </property>
    </bean>

    <!-- large file upload trigger -->
    <bean id="muaFileUploadQuickTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail">
            <ref local="muaFileUplaodJobDetail" />
        </property>
        <property name="startDelay" value="10000" />
        <property name="repeatInterval" value="60000" />
    </bean>

    <bean id="muaFileUplaodJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="MUAProcess" />
        </property>
        <property name="targetMethod">
            <value>uploadFromDirectory</value>
        </property>
        <property name="concurrent">
            <value>false</value>
        </property>
    </bean>

    <!-- Trigger setup -->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref local="muaReleaseQuickTrigger" />
                <ref local="muaFileUploadQuickTrigger" />
            </list>
        </property>
    </bean>
    <!-- DONE -->

    <!-- Create the storage engine and entry handler -->
    <bean name="storageEngine" class="uk.ac.cardiff.raptor.store.DefaultEventStorageEngine">
        <property name="eventHandler">
            <ref bean="persistantEventHandler" />
        </property>
        <property name="attributeAssociationEngine">
            <ref bean="attributeAssociationEngine"></ref>
        </property>
    </bean>

    <bean name="resourceStorageEngine" class="uk.ac.cardiff.raptor.store.DefaultResourceStorageEngine">
        <property name="dataConnection">
            <ref bean="dataConnectionImpl" />
        </property>
    </bean>



    <bean name="persistantEventHandler" class="uk.ac.cardiff.raptor.store.impl.PersistantEventHandler">
        <constructor-arg index="0">
            <ref bean="dataConnectionImpl"></ref>
        </constructor-arg>
        <!-- <property name="optimiseCountQueries"><value>true</value></property> <property name="countClassNames"> <list> 
            <value>ShibbolethIdpAuthenticationEvent</value> <value>EzproxyAuthenticationEvent</value> </list> </property> -->
    </bean>

    <bean name="dataConnectionImpl" class="uk.ac.cardiff.raptor.store.dao.DefaultDataConnection">
        <property name="sessionFactory" ref="muaSessionFactory" />
    </bean>
    
    

    <!-- emailer -->

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="emailTrigger" />
            </list>
        </property>
    </bean>

    <bean id="emailTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="emailJob" />
        <!-- run every morning at 11 PM -->
        <property name="cronExpression" value="0 0 23 * * ?" /> 
      <!--   <property name="cronExpression" value="0 0/1 * 1/1 * ? *" /> -->
    </bean>

    <bean id="emailJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="emailReports" />
        <property name="targetMethod" value="sendReport" />
        <property name="arguments">
            <list>
                <value type="java.lang.String">dailyReport</value>
                <value type="java.lang.String">smartp@cf.ac.uk</value>
            </list>
        </property>
    </bean>

    <bean id="defaultEmailer" class="uk.ac.cardiff.raptormua.mail.DefaultEmailer">
        <property name="velocityEngine">
            <ref bean="velocityEngine" />
        </property>
        <property name="mailSender">
            <ref bean="mailSender" />
        </property>
    </bean>

    <!-- Will determine and inject the any EmailerProperties from the application context -->
    <bean id="emailHandler" class="uk.ac.cardiff.raptormua.mail.EmailHandler">
        <property name="emailer">
            <ref bean="defaultEmailer" />
        </property>
    </bean>

    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="ResourceLoaderPath" value="file:/" />
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">file</prop>
                <prop key="file.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.FileResourceLoader
                </prop>
            </props>
        </property>
    </bean>

    <bean id="emailReports" class="uk.ac.cardiff.raptormua.mail.EmailReportHandler">
        <property name="emailReports">
            <list>
                <bean class="uk.ac.cardiff.raptormua.mail.DailyEmailReport">
                    <property name="emailReportIdentifier" value="dailyReport" />
                    <property name="emailerPropertiesIdentifier" value="raptorDailyEmail" />
                    <property name="persistentStorageStatistics">
                        <ref bean="persistentEventStorageStatistics" />
                    </property>
                    <property name="runtimeStorageStatistics">
                        <ref bean="eventStorageStatistics" />
                    </property>
                </bean>
            </list>
        </property>
        <property name="emailHandler">
            <ref bean="emailHandler" />
        </property>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="courier.cf.ac.uk" />
        <!-- <property name="username" value="user" /> -->
        <!-- <property name="password" value="pass" /> -->
    </bean>


    <bean id="raptorDailyEmailContext" class="uk.ac.cardiff.raptormua.mail.EmailerProperties">
        <property name="emailerPropertiesIdentifier" value="raptorDailyEmail" />
        <property name="title" value="Raptor MUA Daily Report" />
        <property name="fromEmailAddress" value="raptor@cf.ac.uk" />
        <property name="templateLocation" value="classpath:email-templates/dailyReport.vm" />
    </bean>


    <!-- AOP cross cuts and runtime statistics -->

    <bean name="eventStorageStatistics" class="uk.ac.cardiff.raptormua.engine.runtimestatistics.RuntimeEventStorageStatistics">
    </bean>

    <bean name="persistentEventStorageStatistics" class="uk.ac.cardiff.raptormua.engine.runtimestatistics.PersistentEventStorageStatistics">
        <property name="eventHandler">
            <ref bean="persistantEventHandler" />
        </property>
        <property name="periods">
            <list>
                <bean class="uk.ac.cardiff.raptormua.engine.runtimestatistics.TodayStatisticsPeriod" />
                <bean class="uk.ac.cardiff.raptormua.engine.runtimestatistics.ThisYearStatisticsPeriod" />
                <bean class="uk.ac.cardiff.raptormua.engine.runtimestatistics.YesterdayStatisticsPeriod" />
                <bean class="uk.ac.cardiff.raptormua.engine.runtimestatistics.ThisWeekStatisticsPeriod" />
            </list>
        </property>
    </bean>


    <bean name="performanceAdvice" class="uk.ac.cardiff.raptormua.engine.runtimestatistics.PerformanceInterceptor" />

    <bean name="storageStatisticsAdvice" class="uk.ac.cardiff.raptormua.engine.runtimestatistics.StorageStatisticsInterceptor">
        <property name="eventStorageStatistics">
            <ref bean="eventStorageStatistics" />
        </property>
    </bean>

    <aop:config>
<!--         <aop:aspect id="performanceAspect" ref="performanceAdvice">
            <aop:pointcut id="performanceLayer" expression="bean(persistantEventHandler)" />
            <aop:around pointcut-ref="performanceLayer" method="traceSave" />
        </aop:aspect> -->

        <aop:aspect id="eventStorageAspect" ref="storageStatisticsAdvice">
            <aop:pointcut id="eventStorageLayer" expression="bean(storageEngine) and args(transactionId, events)" />
            <aop:before pointcut-ref="eventStorageLayer" method="eventStoreStatistics" />
        </aop:aspect>
    </aop:config>


    <!-- JMX configuration -->


    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="runtimeEventStorageRuntime" value-ref="runtimeEventStorageJmxBean" />
                <entry key="persistentEventStorageRuntime" value-ref="persistentEventStorageJmxBean" />
                <entry key="muaDescriptor" value-ref="muaDescriptorJmxBean" />
                <entry key="emailer" value-ref="emailerJmxBean" />
            </map>
        </property>
        <property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING" />
        <!-- allows metadata driven attribute or method exposure -->
        <property name="assembler" ref="assembler" />
        <!-- allows metadata driven mbean naming -->
        <property name="namingStrategy" ref="namingStrategy"></property>
    </bean>

    <bean id="attributeSource" class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource">
    </bean>

    <bean id="namingStrategy" class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
        <property name="attributeSource" ref="attributeSource" />
    </bean>

    <bean id="assembler" class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
        <property name="attributeSource" ref="attributeSource" />
    </bean>

    <bean id="runtimeEventStorageJmxBean" class="uk.ac.cardiff.raptormua.jmx.EventStorageStatisticsJmx">
        <property name="eventStorageStatistics">
            <ref bean="eventStorageStatistics" />
        </property>
    </bean>

    <bean id="emailerJmxBean" class="uk.ac.cardiff.raptormua.jmx.EmailerJmx">
        <property name="emailReportHandler">
            <ref bean="emailReports" />
        </property>
    </bean>

    <bean id="persistentEventStorageJmxBean" class="uk.ac.cardiff.raptormua.jmx.PersistentEventStorageStatisticsJmx">
        <property name="eventStorageStatistics">
            <ref bean="persistentEventStorageStatistics" />
        </property>
    </bean>

    <bean id="muaDescriptorJmxBean" class="uk.ac.cardiff.raptormua.jmx.MuaDescriptorJmx" />

    <!-- Load all other bean definitions -->

    <import resource="database.xml" />
    <import resource="metadata.xml" />
    <import resource="statistical-units-custom.xml" />
    <import resource="event-release.xml" />
    <import resource="users.xml" />
    <import resource="attribute-association.xml" />
    <import resource="batch-event-parse.xml" />
    <import resource="statistical-units-system.xml" />
    <import resource="statistical-processors.xml" />

</beans>
