//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.11.08 at 06:23:17 PM GMT 
//


package org.sdmx.resources.sdmxml.schemas.v2_0.structure;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.sdmx.resources.sdmxml.schemas.v2_0.common.AnnotationsType;
import org.sdmx.resources.sdmxml.schemas.v2_0.common.TextType;


/**
 * CategorySchemeMap provides for the mapping of categories in one scheme against those in another. It requires a human-readable Name, and can have a longer human-readable Description, both of which can be supplied in multiple, parallel-language form. It may be annotated using Annotations. The id attribute carries a unique ID for CategorySchemeMaps within the StructureSet. CategorySchemeRef identifies the source CategoryScheme; TargetCategorySchemeRef identifies the target CategoryScheme.
 * 
 * <p>Java class for CategorySchemeMapType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CategorySchemeMapType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Name" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/common}TextType" maxOccurs="unbounded"/>
 *         &lt;element name="Description" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/common}TextType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="CategorySchemeRef" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/structure}CategorySchemeRefType"/>
 *         &lt;element name="TargetCategorySchemeRef" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/structure}CategorySchemeRefType"/>
 *         &lt;element name="CategoryMap" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/structure}CategoryMapType" maxOccurs="unbounded"/>
 *         &lt;element name="Annotations" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/common}AnnotationsType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" use="required" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/common}IDType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CategorySchemeMapType", propOrder = {
    "name",
    "description",
    "categorySchemeRef",
    "targetCategorySchemeRef",
    "categoryMap",
    "annotations"
})
public class CategorySchemeMapType {

    @XmlElement(name = "Name", required = true)
    protected List<TextType> name;
    @XmlElement(name = "Description")
    protected List<TextType> description;
    @XmlElement(name = "CategorySchemeRef", required = true)
    protected CategorySchemeRefType categorySchemeRef;
    @XmlElement(name = "TargetCategorySchemeRef", required = true)
    protected CategorySchemeRefType targetCategorySchemeRef;
    @XmlElement(name = "CategoryMap", required = true)
    protected List<CategoryMapType> categoryMap;
    @XmlElement(name = "Annotations")
    protected AnnotationsType annotations;
    @XmlAttribute(required = true)
    protected String id;

    /**
     * Gets the value of the name property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the name property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TextType }
     * 
     * 
     */
    public List<TextType> getName() {
        if (name == null) {
            name = new ArrayList<TextType>();
        }
        return this.name;
    }

    /**
     * Gets the value of the description property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the description property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDescription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TextType }
     * 
     * 
     */
    public List<TextType> getDescription() {
        if (description == null) {
            description = new ArrayList<TextType>();
        }
        return this.description;
    }

    /**
     * Gets the value of the categorySchemeRef property.
     * 
     * @return
     *     possible object is
     *     {@link CategorySchemeRefType }
     *     
     */
    public CategorySchemeRefType getCategorySchemeRef() {
        return categorySchemeRef;
    }

    /**
     * Sets the value of the categorySchemeRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link CategorySchemeRefType }
     *     
     */
    public void setCategorySchemeRef(CategorySchemeRefType value) {
        this.categorySchemeRef = value;
    }

    /**
     * Gets the value of the targetCategorySchemeRef property.
     * 
     * @return
     *     possible object is
     *     {@link CategorySchemeRefType }
     *     
     */
    public CategorySchemeRefType getTargetCategorySchemeRef() {
        return targetCategorySchemeRef;
    }

    /**
     * Sets the value of the targetCategorySchemeRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link CategorySchemeRefType }
     *     
     */
    public void setTargetCategorySchemeRef(CategorySchemeRefType value) {
        this.targetCategorySchemeRef = value;
    }

    /**
     * Gets the value of the categoryMap property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the categoryMap property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCategoryMap().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CategoryMapType }
     * 
     * 
     */
    public List<CategoryMapType> getCategoryMap() {
        if (categoryMap == null) {
            categoryMap = new ArrayList<CategoryMapType>();
        }
        return this.categoryMap;
    }

    /**
     * Gets the value of the annotations property.
     * 
     * @return
     *     possible object is
     *     {@link AnnotationsType }
     *     
     */
    public AnnotationsType getAnnotations() {
        return annotations;
    }

    /**
     * Sets the value of the annotations property.
     * 
     * @param value
     *     allowed object is
     *     {@link AnnotationsType }
     *     
     */
    public void setAnnotations(AnnotationsType value) {
        this.annotations = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

}
