//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.11.08 at 06:23:17 PM GMT 
//


package org.sdmx.resources.sdmxml.schemas.v2_0.structure;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.sdmx.resources.sdmxml.schemas.v2_0.common.AnnotationsType;
import org.sdmx.resources.sdmxml.schemas.v2_0.common.TextType;


/**
 * CodelistMap allows the description of how the codes in a codelist are represented in a target codelist or associated hierarchical codelist. A human-readable Name is provided, and a longer, human-readable description may be provided as well, in the Name and Description elements respectively. These may be supplied in multiple, language-specific versions.CodelistRef references the codelist or hierarchical codelist being mapped; TargetCodelistRef indicates the codelist to which it will be mapped. CodeMap is the element which indicates the equivalence of codes in the referenced codelist to those in the target codelist. Any codes not mapped are assumed to lack equivalence. The CodelistMap may be annotated using the Annotations element. The id attribute is used to assign an identifier which is unique within the StructureSet for all CodelistMaps.
 * 
 * <p>Java class for CodelistMapType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CodelistMapType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Name" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/common}TextType" maxOccurs="unbounded"/>
 *         &lt;element name="Description" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/common}TextType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;choice>
 *           &lt;element name="CodelistRef" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/structure}CodelistRefType"/>
 *           &lt;element name="HierarchicalCodelistRef" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/structure}HierarchicalCodelistRefType"/>
 *         &lt;/choice>
 *         &lt;choice>
 *           &lt;element name="TargetCodelistRef" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/structure}CodelistRefType"/>
 *           &lt;element name="TargetHierarchicalCodelistRef" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/structure}HierarchicalCodelistRefType"/>
 *         &lt;/choice>
 *         &lt;element name="CodeMap" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/structure}CodeMapType" maxOccurs="unbounded"/>
 *         &lt;element name="Annotations" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/common}AnnotationsType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" use="required" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/common}IDType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CodelistMapType", propOrder = {
    "name",
    "description",
    "codelistRef",
    "hierarchicalCodelistRef",
    "targetCodelistRef",
    "targetHierarchicalCodelistRef",
    "codeMap",
    "annotations"
})
public class CodelistMapType {

    @XmlElement(name = "Name", required = true)
    protected List<TextType> name;
    @XmlElement(name = "Description")
    protected List<TextType> description;
    @XmlElement(name = "CodelistRef")
    protected CodelistRefType codelistRef;
    @XmlElement(name = "HierarchicalCodelistRef")
    protected HierarchicalCodelistRefType hierarchicalCodelistRef;
    @XmlElement(name = "TargetCodelistRef")
    protected CodelistRefType targetCodelistRef;
    @XmlElement(name = "TargetHierarchicalCodelistRef")
    protected HierarchicalCodelistRefType targetHierarchicalCodelistRef;
    @XmlElement(name = "CodeMap", required = true)
    protected List<CodeMapType> codeMap;
    @XmlElement(name = "Annotations")
    protected AnnotationsType annotations;
    @XmlAttribute(required = true)
    protected String id;

    /**
     * Gets the value of the name property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the name property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TextType }
     * 
     * 
     */
    public List<TextType> getName() {
        if (name == null) {
            name = new ArrayList<TextType>();
        }
        return this.name;
    }

    /**
     * Gets the value of the description property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the description property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDescription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TextType }
     * 
     * 
     */
    public List<TextType> getDescription() {
        if (description == null) {
            description = new ArrayList<TextType>();
        }
        return this.description;
    }

    /**
     * Gets the value of the codelistRef property.
     * 
     * @return
     *     possible object is
     *     {@link CodelistRefType }
     *     
     */
    public CodelistRefType getCodelistRef() {
        return codelistRef;
    }

    /**
     * Sets the value of the codelistRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodelistRefType }
     *     
     */
    public void setCodelistRef(CodelistRefType value) {
        this.codelistRef = value;
    }

    /**
     * Gets the value of the hierarchicalCodelistRef property.
     * 
     * @return
     *     possible object is
     *     {@link HierarchicalCodelistRefType }
     *     
     */
    public HierarchicalCodelistRefType getHierarchicalCodelistRef() {
        return hierarchicalCodelistRef;
    }

    /**
     * Sets the value of the hierarchicalCodelistRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link HierarchicalCodelistRefType }
     *     
     */
    public void setHierarchicalCodelistRef(HierarchicalCodelistRefType value) {
        this.hierarchicalCodelistRef = value;
    }

    /**
     * Gets the value of the targetCodelistRef property.
     * 
     * @return
     *     possible object is
     *     {@link CodelistRefType }
     *     
     */
    public CodelistRefType getTargetCodelistRef() {
        return targetCodelistRef;
    }

    /**
     * Sets the value of the targetCodelistRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodelistRefType }
     *     
     */
    public void setTargetCodelistRef(CodelistRefType value) {
        this.targetCodelistRef = value;
    }

    /**
     * Gets the value of the targetHierarchicalCodelistRef property.
     * 
     * @return
     *     possible object is
     *     {@link HierarchicalCodelistRefType }
     *     
     */
    public HierarchicalCodelistRefType getTargetHierarchicalCodelistRef() {
        return targetHierarchicalCodelistRef;
    }

    /**
     * Sets the value of the targetHierarchicalCodelistRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link HierarchicalCodelistRefType }
     *     
     */
    public void setTargetHierarchicalCodelistRef(HierarchicalCodelistRefType value) {
        this.targetHierarchicalCodelistRef = value;
    }

    /**
     * Gets the value of the codeMap property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the codeMap property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCodeMap().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CodeMapType }
     * 
     * 
     */
    public List<CodeMapType> getCodeMap() {
        if (codeMap == null) {
            codeMap = new ArrayList<CodeMapType>();
        }
        return this.codeMap;
    }

    /**
     * Gets the value of the annotations property.
     * 
     * @return
     *     possible object is
     *     {@link AnnotationsType }
     *     
     */
    public AnnotationsType getAnnotations() {
        return annotations;
    }

    /**
     * Sets the value of the annotations property.
     * 
     * @param value
     *     allowed object is
     *     {@link AnnotationsType }
     *     
     */
    public void setAnnotations(AnnotationsType value) {
        this.annotations = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

}
