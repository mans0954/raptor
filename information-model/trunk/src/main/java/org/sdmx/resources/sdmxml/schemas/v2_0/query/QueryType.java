//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.11.08 at 06:23:17 PM GMT 
//


package org.sdmx.resources.sdmxml.schemas.v2_0.query;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * The Query element is a top-level element for this namespace, which is referenced by the SDMX message envelope, or could be put inside another envelope, such as SOAP. It contains a query. The defaultLimit attribute is the suggested maximum response size in kilobytes.
 * 
 * <p>Java class for QueryType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="QueryType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="DataWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}DataWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="MetadataWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}MetadataWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="KeyFamilyWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}KeyFamilyWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="MetadataStructureWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}MetadataStructureWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="CodelistWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}CodelistWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="ConceptWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}ConceptWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="AgencyWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}AgencyWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="DataProviderWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}DataProviderWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="HierarchicalCodelistWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}HierarchicalCodelistWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="ReportingTaxonomyWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}ReportingTaxonomyWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="DataflowWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}DataflowWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="MetadataflowWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}MetadataflowWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="StructureSetWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}StructureSetWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="ProcessWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}ProcessWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="OrganisationSchemeWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}OrganisationSchemeWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="ConceptSchemeWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}ConceptSchemeWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="CategorySchemeWhere" type="{http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query}CategorySchemeWhereType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="defaultLimit" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "QueryType", propOrder = {
    "dataWhere",
    "metadataWhere",
    "keyFamilyWhere",
    "metadataStructureWhere",
    "codelistWhere",
    "conceptWhere",
    "agencyWhere",
    "dataProviderWhere",
    "hierarchicalCodelistWhere",
    "reportingTaxonomyWhere",
    "dataflowWhere",
    "metadataflowWhere",
    "structureSetWhere",
    "processWhere",
    "organisationSchemeWhere",
    "conceptSchemeWhere",
    "categorySchemeWhere"
})
public class QueryType {

    @XmlElement(name = "DataWhere")
    protected List<DataWhereType> dataWhere;
    @XmlElement(name = "MetadataWhere")
    protected List<MetadataWhereType> metadataWhere;
    @XmlElement(name = "KeyFamilyWhere")
    protected List<KeyFamilyWhereType> keyFamilyWhere;
    @XmlElement(name = "MetadataStructureWhere")
    protected List<MetadataStructureWhereType> metadataStructureWhere;
    @XmlElement(name = "CodelistWhere")
    protected List<CodelistWhereType> codelistWhere;
    @XmlElement(name = "ConceptWhere")
    protected List<ConceptWhereType> conceptWhere;
    @XmlElement(name = "AgencyWhere")
    protected List<AgencyWhereType> agencyWhere;
    @XmlElement(name = "DataProviderWhere")
    protected List<DataProviderWhereType> dataProviderWhere;
    @XmlElement(name = "HierarchicalCodelistWhere")
    protected List<HierarchicalCodelistWhereType> hierarchicalCodelistWhere;
    @XmlElement(name = "ReportingTaxonomyWhere")
    protected List<ReportingTaxonomyWhereType> reportingTaxonomyWhere;
    @XmlElement(name = "DataflowWhere")
    protected List<DataflowWhereType> dataflowWhere;
    @XmlElement(name = "MetadataflowWhere")
    protected List<MetadataflowWhereType> metadataflowWhere;
    @XmlElement(name = "StructureSetWhere")
    protected List<StructureSetWhereType> structureSetWhere;
    @XmlElement(name = "ProcessWhere")
    protected List<ProcessWhereType> processWhere;
    @XmlElement(name = "OrganisationSchemeWhere")
    protected List<OrganisationSchemeWhereType> organisationSchemeWhere;
    @XmlElement(name = "ConceptSchemeWhere")
    protected List<ConceptSchemeWhereType> conceptSchemeWhere;
    @XmlElement(name = "CategorySchemeWhere")
    protected List<CategorySchemeWhereType> categorySchemeWhere;
    @XmlAttribute
    protected BigInteger defaultLimit;

    /**
     * Gets the value of the dataWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dataWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDataWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DataWhereType }
     * 
     * 
     */
    public List<DataWhereType> getDataWhere() {
        if (dataWhere == null) {
            dataWhere = new ArrayList<DataWhereType>();
        }
        return this.dataWhere;
    }

    /**
     * Gets the value of the metadataWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the metadataWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMetadataWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MetadataWhereType }
     * 
     * 
     */
    public List<MetadataWhereType> getMetadataWhere() {
        if (metadataWhere == null) {
            metadataWhere = new ArrayList<MetadataWhereType>();
        }
        return this.metadataWhere;
    }

    /**
     * Gets the value of the keyFamilyWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the keyFamilyWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getKeyFamilyWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link KeyFamilyWhereType }
     * 
     * 
     */
    public List<KeyFamilyWhereType> getKeyFamilyWhere() {
        if (keyFamilyWhere == null) {
            keyFamilyWhere = new ArrayList<KeyFamilyWhereType>();
        }
        return this.keyFamilyWhere;
    }

    /**
     * Gets the value of the metadataStructureWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the metadataStructureWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMetadataStructureWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MetadataStructureWhereType }
     * 
     * 
     */
    public List<MetadataStructureWhereType> getMetadataStructureWhere() {
        if (metadataStructureWhere == null) {
            metadataStructureWhere = new ArrayList<MetadataStructureWhereType>();
        }
        return this.metadataStructureWhere;
    }

    /**
     * Gets the value of the codelistWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the codelistWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCodelistWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CodelistWhereType }
     * 
     * 
     */
    public List<CodelistWhereType> getCodelistWhere() {
        if (codelistWhere == null) {
            codelistWhere = new ArrayList<CodelistWhereType>();
        }
        return this.codelistWhere;
    }

    /**
     * Gets the value of the conceptWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConceptWhereType }
     * 
     * 
     */
    public List<ConceptWhereType> getConceptWhere() {
        if (conceptWhere == null) {
            conceptWhere = new ArrayList<ConceptWhereType>();
        }
        return this.conceptWhere;
    }

    /**
     * Gets the value of the agencyWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the agencyWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAgencyWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AgencyWhereType }
     * 
     * 
     */
    public List<AgencyWhereType> getAgencyWhere() {
        if (agencyWhere == null) {
            agencyWhere = new ArrayList<AgencyWhereType>();
        }
        return this.agencyWhere;
    }

    /**
     * Gets the value of the dataProviderWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dataProviderWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDataProviderWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DataProviderWhereType }
     * 
     * 
     */
    public List<DataProviderWhereType> getDataProviderWhere() {
        if (dataProviderWhere == null) {
            dataProviderWhere = new ArrayList<DataProviderWhereType>();
        }
        return this.dataProviderWhere;
    }

    /**
     * Gets the value of the hierarchicalCodelistWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the hierarchicalCodelistWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHierarchicalCodelistWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link HierarchicalCodelistWhereType }
     * 
     * 
     */
    public List<HierarchicalCodelistWhereType> getHierarchicalCodelistWhere() {
        if (hierarchicalCodelistWhere == null) {
            hierarchicalCodelistWhere = new ArrayList<HierarchicalCodelistWhereType>();
        }
        return this.hierarchicalCodelistWhere;
    }

    /**
     * Gets the value of the reportingTaxonomyWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the reportingTaxonomyWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReportingTaxonomyWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReportingTaxonomyWhereType }
     * 
     * 
     */
    public List<ReportingTaxonomyWhereType> getReportingTaxonomyWhere() {
        if (reportingTaxonomyWhere == null) {
            reportingTaxonomyWhere = new ArrayList<ReportingTaxonomyWhereType>();
        }
        return this.reportingTaxonomyWhere;
    }

    /**
     * Gets the value of the dataflowWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dataflowWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDataflowWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DataflowWhereType }
     * 
     * 
     */
    public List<DataflowWhereType> getDataflowWhere() {
        if (dataflowWhere == null) {
            dataflowWhere = new ArrayList<DataflowWhereType>();
        }
        return this.dataflowWhere;
    }

    /**
     * Gets the value of the metadataflowWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the metadataflowWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMetadataflowWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MetadataflowWhereType }
     * 
     * 
     */
    public List<MetadataflowWhereType> getMetadataflowWhere() {
        if (metadataflowWhere == null) {
            metadataflowWhere = new ArrayList<MetadataflowWhereType>();
        }
        return this.metadataflowWhere;
    }

    /**
     * Gets the value of the structureSetWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the structureSetWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStructureSetWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StructureSetWhereType }
     * 
     * 
     */
    public List<StructureSetWhereType> getStructureSetWhere() {
        if (structureSetWhere == null) {
            structureSetWhere = new ArrayList<StructureSetWhereType>();
        }
        return this.structureSetWhere;
    }

    /**
     * Gets the value of the processWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the processWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProcessWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProcessWhereType }
     * 
     * 
     */
    public List<ProcessWhereType> getProcessWhere() {
        if (processWhere == null) {
            processWhere = new ArrayList<ProcessWhereType>();
        }
        return this.processWhere;
    }

    /**
     * Gets the value of the organisationSchemeWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the organisationSchemeWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOrganisationSchemeWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrganisationSchemeWhereType }
     * 
     * 
     */
    public List<OrganisationSchemeWhereType> getOrganisationSchemeWhere() {
        if (organisationSchemeWhere == null) {
            organisationSchemeWhere = new ArrayList<OrganisationSchemeWhereType>();
        }
        return this.organisationSchemeWhere;
    }

    /**
     * Gets the value of the conceptSchemeWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptSchemeWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptSchemeWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConceptSchemeWhereType }
     * 
     * 
     */
    public List<ConceptSchemeWhereType> getConceptSchemeWhere() {
        if (conceptSchemeWhere == null) {
            conceptSchemeWhere = new ArrayList<ConceptSchemeWhereType>();
        }
        return this.conceptSchemeWhere;
    }

    /**
     * Gets the value of the categorySchemeWhere property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the categorySchemeWhere property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCategorySchemeWhere().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CategorySchemeWhereType }
     * 
     * 
     */
    public List<CategorySchemeWhereType> getCategorySchemeWhere() {
        if (categorySchemeWhere == null) {
            categorySchemeWhere = new ArrayList<CategorySchemeWhereType>();
        }
        return this.categorySchemeWhere;
    }

    /**
     * Gets the value of the defaultLimit property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDefaultLimit() {
        return defaultLimit;
    }

    /**
     * Sets the value of the defaultLimit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDefaultLimit(BigInteger value) {
        this.defaultLimit = value;
    }

}
