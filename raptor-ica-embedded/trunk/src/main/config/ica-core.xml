<?xml version="1.0" encoding="UTF-8"?>
	<!--

		Copyright (C) 2010 Cardiff University, Wales <smartp@cf.ac.uk>

		Licensed under the Apache License, Version 2.0 (the "License"); you
		may not use this file except in compliance with the License. You may
		obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0 Unless required by
		applicable law or agreed to in writing, software distributed under the
		License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
		CONDITIONS OF ANY KIND, either express or implied. See the License for
		the specific language governing permissions and limitations under the
		License.
	-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

	<!-- Polling trigger setup -->
	<bean id="ICAProcessQuickTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail">
			<ref local="ICAProcessJobDetail" />
		</property>
		<property name="repeatInterval" value="30000" />
	</bean>

	<bean id="ICAProcessJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="ICAProcess" />
		</property>
		<property name="targetMethod">
			<value>capture</value>
		</property>
		<property name="concurrent">
			<value>false</value>
		</property>
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref local="ICAProcessQuickTrigger" />
			</list>
		</property>
	</bean>
	<!--  DONE -->


	<bean id="ICAProcess" class="uk.ac.cardiff.raptor.raptorica.service.impl.ICAProcessImpl">
		<property name="engine">
			<ref bean="CaptureEngine"></ref>
		</property>
	</bean>

	<!--
		this bean config kicks of the singleton engine instance which is then
		used by all services of the ICA
	-->
	<bean id="CaptureEngine" class="uk.ac.cardiff.raptor.raptorica.engine.ICAEngine">
		<property name="dataAccessRegister"><ref bean="dataAccessRegister"></ref></property>
		<property name="eventReleaseClient"><ref bean="eventReleaseClient"></ref></property>
		<property name="icaMetadata"><ref bean="ICAMetadata"></ref></property>
	</bean>

	<!-- ICA Metadata -->
	<bean id="ICAMetadata" class="uk.ac.cardiff.model.ClientMetadata">
		<property name="clientName"><value>IdP1 Shibboleth Log File Parser</value></property>
		<property name="organisationName"><value>Cardiff University</value></property>
		<property name="contactEmail"><value>smartp@cf.ac.uk</value></property>
		<property name="serviceName"><value>Cardiff University Shibboleth Identity Provider</value></property>
	</bean>

	<bean id="eventReleaseClient" class="uk.ac.cardiff.raptor.remoting.client.impl.EventReleaseClientImpl">
		<property name="endpointRegistry"><ref bean="endpointRegistry"/></property>
		<property name="eventReleaseEngine"><ref bean="eventReleaseEngine"></ref></property>
	</bean>

	<bean id="eventReleaseEngine" class="uk.ac.cardiff.raptor.registry.EventReleaseEngine">
		<property name="attributeFilterEngine"><ref bean="attributeFilterEngine"/></property>
		<property name="serviceEndpointInterface"><ref bean="serviceEndpointInterface"/></property>
	</bean>

	<bean id="attributeFilterEngine" class="uk.ac.cardiff.raptor.attribute.filtering.AttrributeFilterEngine"/>

	<bean id="serviceEndpointInterface" class="uk.ac.cardiff.raptor.remoting.client.sei.impl.CxfServiceEndpointClient"/>

	<import resource="dao-beans.xml"/>
	<import resource="data-access.xml" />
	<import resource="event-release.xml" />

</beans>
